version: "3.6"

services:

  gunicorn_server:
    restart: always
    image: quay.io/natlibfi/annif
    command: ["gunicorn", "annif:create_app()", "--bind", "0.0.0.0:8000"]
    volumes:
      - data:/annif-projects
    depends_on:
      - data
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.environment == test

  nginx:
    restart: always
    image: nginx
    volumes:
      - apidata:/apidata:ro
    depends_on:
      - gunicorn_server
    command: ["nginx", "-c", "/apidata/nginx.conf", "-g", "daemon off;"]

    networks:
    - default
    - traefik-net
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
        - node.labels.environment == test
      labels:
      - traefik.enable=true
      - traefik.http.services.annif-test.loadbalancer.server.port=80
      - traefik.http.routers.annif-test-http.rule=Host(`annif.dev.finto.fi`)
      - traefik.http.routers.annif-test-http.entrypoints=http
      - traefik.http.routers.annif-test-http.middlewares=redirect@file
      - traefik.http.routers.annif-test-https.rule=Host(`annif.dev.finto.fi`)
      - traefik.http.routers.annif-test-https.entrypoints=https
      - traefik.http.routers.annif-test-https.tls=true


  data:
    image: quay.io/natlibfi/annif-data
    volumes:
      - data:/annif-projects
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints:
        - node.labels.environment == test

  apidata:
    image: quay.io/natlibfi/annif-data:api
    volumes:
      - apidata:/tmp
    command: >
      sh -c "echo Copying data from image to mounted volume... &&
        cp -r --verbose /apidata/. /tmp/ &&
        echo Copied!"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
      placement:
        constraints:
        - node.labels.environment == test

volumes:
  data:
  apidata:

networks:
  traefik-net:
    external: true
